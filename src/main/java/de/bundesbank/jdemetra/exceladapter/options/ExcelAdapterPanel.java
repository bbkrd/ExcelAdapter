/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.bundesbank.jdemetra.exceladapter.options;

import org.openide.util.NbPreferences;

final class ExcelAdapterPanel extends javax.swing.JPanel {

    private final ExcelAdapterOptionsPanelController controller;

    ExcelAdapterPanel(ExcelAdapterOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        javax.swing.JLabel exportTables = new javax.swing.JLabel();
        a6 = new javax.swing.JCheckBox();
        d10 = new javax.swing.JCheckBox();
        d11 = new javax.swing.JCheckBox();
        d12 = new javax.swing.JCheckBox();
        d13 = new javax.swing.JCheckBox();

        jPanel1.setLayout(new java.awt.GridLayout(6, 0));

        org.openide.awt.Mnemonics.setLocalizedText(exportTables, org.openide.util.NbBundle.getMessage(ExcelAdapterPanel.class, "ExcelAdapterPanel.exportTables.text")); // NOI18N
        jPanel1.add(exportTables);

        org.openide.awt.Mnemonics.setLocalizedText(a6, org.openide.util.NbBundle.getMessage(ExcelAdapterPanel.class, "ExcelAdapterPanel.a6.text")); // NOI18N
        jPanel1.add(a6);

        org.openide.awt.Mnemonics.setLocalizedText(d10, org.openide.util.NbBundle.getMessage(ExcelAdapterPanel.class, "ExcelAdapterPanel.d10.text")); // NOI18N
        jPanel1.add(d10);

        org.openide.awt.Mnemonics.setLocalizedText(d11, org.openide.util.NbBundle.getMessage(ExcelAdapterPanel.class, "ExcelAdapterPanel.d11.text")); // NOI18N
        jPanel1.add(d11);

        org.openide.awt.Mnemonics.setLocalizedText(d12, org.openide.util.NbBundle.getMessage(ExcelAdapterPanel.class, "ExcelAdapterPanel.d12.text")); // NOI18N
        jPanel1.add(d12);

        org.openide.awt.Mnemonics.setLocalizedText(d13, org.openide.util.NbBundle.getMessage(ExcelAdapterPanel.class, "ExcelAdapterPanel.d13.text")); // NOI18N
        jPanel1.add(d13);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 102, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 51, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    void load() {
        a6.setSelected(NbPreferences.forModule(ExcelAdapterOptionsPanelController.class).getBoolean(ExcelAdapterOptionsPanelController.A6, true));
        d10.setSelected(NbPreferences.forModule(ExcelAdapterOptionsPanelController.class).getBoolean(ExcelAdapterOptionsPanelController.D10, true));
        d11.setSelected(NbPreferences.forModule(ExcelAdapterOptionsPanelController.class).getBoolean(ExcelAdapterOptionsPanelController.D11, true));
        d12.setSelected(NbPreferences.forModule(ExcelAdapterOptionsPanelController.class).getBoolean(ExcelAdapterOptionsPanelController.D12, true));
        d13.setSelected(NbPreferences.forModule(ExcelAdapterOptionsPanelController.class).getBoolean(ExcelAdapterOptionsPanelController.D13, true));
    }

    void store() {
        NbPreferences.forModule(ExcelAdapterOptionsPanelController.class).putBoolean(ExcelAdapterOptionsPanelController.A6, a6.isSelected());
        NbPreferences.forModule(ExcelAdapterOptionsPanelController.class).putBoolean(ExcelAdapterOptionsPanelController.D10, d10.isSelected());
        NbPreferences.forModule(ExcelAdapterOptionsPanelController.class).putBoolean(ExcelAdapterOptionsPanelController.D11, d11.isSelected());
        NbPreferences.forModule(ExcelAdapterOptionsPanelController.class).putBoolean(ExcelAdapterOptionsPanelController.D12, d12.isSelected());
        NbPreferences.forModule(ExcelAdapterOptionsPanelController.class).putBoolean(ExcelAdapterOptionsPanelController.D13, d13.isSelected());
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox a6;
    private javax.swing.JCheckBox d10;
    private javax.swing.JCheckBox d11;
    private javax.swing.JCheckBox d12;
    private javax.swing.JCheckBox d13;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
